"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[837],{7774:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var r=n(4848),s=n(8453);const t={title:"Grafana",sidebar_position:2},o="Dashboards Tools: Grafana",i={id:"available-toolkit/dashboards/grafana",title:"Grafana",description:"The Observability Stack uses grafana-operator for deploying and managing the Grafana instance, which serves as the visualization layer for the observability data collected.",source:"@site/docs/available-toolkit/dashboards/grafana.md",sourceDirName:"available-toolkit/dashboards",slug:"/available-toolkit/dashboards/grafana",permalink:"/observability-stack.io/available-toolkit/dashboards/grafana",draft:!1,unlisted:!1,editUrl:"https://github.com/observability-stack/observability-stack.io/edit/main/docs/docs/available-toolkit/dashboards/grafana.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Grafana",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Dashboards",permalink:"/observability-stack.io/category/dashboards"},next:{title:"How-to Guides",permalink:"/observability-stack.io/category/how-to-guides"}},l={},c=[{value:"Architecture",id:"architecture",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Datasources Configuration",id:"datasources-configuration",level:3},{value:"Grafana Dashboards",id:"grafana-dashboards",level:3},{value:"Folder structure",id:"folder-structure",level:4},{value:"Usage",id:"usage",level:4},{value:"Grafana deployment with Keycloak OAuth2 SSO configuration",id:"grafana-deployment-with-keycloak-oauth2-sso-configuration",level:3},{value:"Ingress",id:"ingress",level:3},{value:"Alerts",id:"alerts",level:3}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"dashboards-tools-grafana",children:"Dashboards Tools: Grafana"})}),"\n",(0,r.jsxs)(a.p,{children:["The Observability Stack uses ",(0,r.jsx)(a.a,{href:"https://grafana.github.io/grafana-operator/",children:"grafana-operator"})," for deploying and managing the Grafana instance, which serves as the visualization layer for the observability data collected."]}),"\n",(0,r.jsxs)(a.p,{children:["The deployment of the operator itself is via using the ",(0,r.jsx)(a.a,{href:"https://operatorhub.io/operator/grafana-operator",children:"OperatorHub.io"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(a.p,{children:"To be complated"}),"\n",(0,r.jsx)(a.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",children:'kind: Grafana\napiVersion: grafana.integreatly.org/v1beta1\nmetadata:\n  name: grafana\n  labels:\n    dashboards: grafana\nspec:\n  persistentVolumeClaim:\n    spec:\n      accessModes:\n        - ReadWriteOnce\n      resources:\n        requests:\n          storage: 10Gi\n      storageClassName: <storageClass-name> # set your own storage class\n      volumeMode: Filesystem\n  config:\n    log:\n      mode: console\n      level: warn\n    server:\n      domain: monitoring.observability.[yourdomain].com # set your own domain\n      protocol: http\n      https_port: "443"\n      root_url: "https://%(domain)s/"\n    auth:\n      disable_login_form: "false"\n    security:\n      admin_user: root\n      admin_password: secret\n'})}),"\n",(0,r.jsx)(a.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(a.h3,{id:"datasources-configuration",children:"Datasources Configuration"}),"\n",(0,r.jsxs)(a.p,{children:["While Grafana's datasources can be configured manually, such configurations are not persistent across restarts due to Grafana being stateless by default. Therefore, static configurations can be achieved by creating a ",(0,r.jsx)(a.code,{children:"datasources.yaml"})," file in the ",(0,r.jsx)(a.code,{children:"base"})," directory. Examples of YAML manifests for setting up observability datasources are provided below and are also available in the base directory for use."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",children:'apiVersion: grafana.integreatly.org/v1beta1\nkind: GrafanaDatasource\nmetadata:\n  name: monitoring-thanos\nspec:\n  instanceSelector:\n    matchLabels:\n      dashboards: "grafana"\n  datasource:\n    name: Thanos\n    type: prometheus\n    access: proxy\n    url: "http://thanos-monitoring-query-frontend.thanos-system.svc.[clusterDomain].local":9090"\n    isDefault: true\n    jsonData:\n      "tlsSkipVerify": false\n      "timeInterval": "30s" # solves dashboards not showing correctly. See https://github.com# solves dashboards not showing correctly. See https://github.com/rfmoz/grafana-dashboards/issues/72#issuecomment-880484961/rfmoz/grafana-dashboards/issues/72#issuecomment-880484961\n    editable: true\n---\napiVersion: grafana.integreatly.org/v1beta1\nkind: GrafanaDatasource\nmetadata:\n  name: logging-opensearch\nspec:\n  instanceSelector:\n    matchLabels:\n      dashboards: "grafana"\n  datasource:\n    name: Logs\n    type: grafana-opensearch-datasource\n    access: proxy\n    url: "https://logging-cluster.opensearch-system.svc.[clusterDomain].local:9200"\n    basicAuth: true\n    basicAuthUser: ${username}\n    isDefault: false\n    jsonData:\n      "tlsSkipVerify": true\n      "pplEnabled": true\n      # "database": "logs-*" # opensearch index\n      "timeInterval": "10s"\n      "timeField": "@timestamp"\n      "version": "2.8.0"\n      "flavor": "opensearch"\n    secureJsonData:\n      "password": ${password}\n    editable: true\n  valuesFrom:\n    - targetPath: basicAuthUser\n      valueFrom:\n        secretKeyRef:\n          name: grafana-opensearch-cred\n          key: username\n    - targetPath: "secureJsonData.password"\n      valueFrom:\n        secretKeyRef:\n          name: grafana-opensearch-cred\n          key: password\n  plugins:\n    - name: grafana-opensearch-datasource\n      version: 2.14.4\n---\napiVersion: grafana.integreatly.org/v1beta1\nkind: GrafanaDatasource\nmetadata:\n  name: tracing-jaeger\nspec:\n  instanceSelector:\n    matchLabels:\n      dashboards: "grafana"\n  datasource:\n    name: Traces\n    type: jaeger\n    access: proxy\n    url: "http://jaeger-tracing-query.tracing-system.svc.[clusterDomain].local:16686"\n    isDefault: false\n    editable: true\n'})}),"\n",(0,r.jsxs)(a.p,{children:["For integrating the Opensearch datasource into Grafana, you need to create a ",(0,r.jsx)(a.code,{children:"secretKeyRef"})," called ",(0,r.jsx)(a.code,{children:"grafana-opensearch-cred"})," with key/value pair ",(0,r.jsx)(a.code,{children:"username"})," and ",(0,r.jsx)(a.code,{children:"password"})," to be used by the Opensearch datasource plugin to authenticate with Opensearch. This credential storage can be achieved through a standard Kubernetes secret or with an ",(0,r.jsx)(a.code,{children:"ExternalSecret"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"grafana-dashboards",children:"Grafana Dashboards"}),"\n",(0,r.jsx)(a.p,{children:"This folder contains all the code related to the development and deployment of Grafana Dashboards."}),"\n",(0,r.jsx)(a.h4,{id:"folder-structure",children:"Folder structure"}),"\n",(0,r.jsx)(a.p,{children:"All the dashboards are saved as JSON in the relative folder, organized per Datasource, then Grafana Folder."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"json\n|\n|--- Thanos (datasource)\n     |\n     |--- Home (Grafana Folder)\n"})}),"\n",(0,r.jsxs)(a.p,{children:["In each datasource folder there is a ",(0,r.jsx)(a.code,{children:"dashboard-template.yaml"})," file, which contains the ",(0,r.jsx)(a.code,{children:"GrafanaDashboard"})," custom resource, specifying the datasource(s) for all the dashboards in that folder."]}),"\n",(0,r.jsxs)(a.p,{children:["Finally, the ",(0,r.jsx)(a.code,{children:"generated"})," folder contains all the final manifests ready to be deployed in Kubernetes."]}),"\n",(0,r.jsx)(a.h4,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(a.p,{children:["The easiest way to develop a dashboard is to create it in Grafana, then save it in the specific ",(0,r.jsx)(a.code,{children:"json"})," folder and then launch the ",(0,r.jsx)(a.code,{children:"generate.sh"})," script to create the relative manifest and insert it in Kustomize."]}),"\n",(0,r.jsx)(a.p,{children:"More in detail:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"Create and develop your dashboard in Grafana"}),"\n",(0,r.jsx)(a.li,{children:'Select "Share" button'}),"\n",(0,r.jsxs)(a.li,{children:["In ",(0,r.jsx)(a.code,{children:"Export"})," tab, select ",(0,r.jsx)(a.code,{children:"Export for sharing externally"})," (very important) and then ",(0,r.jsx)(a.code,{children:"Save to file"})]}),"\n",(0,r.jsx)(a.li,{children:"Check if the file contains content because it could happen that for compatibility reasons it is empty."}),"\n",(0,r.jsx)(a.li,{children:"Delete or rename the already created dashboard to avoid conflicts with the locally saved one."}),"\n",(0,r.jsxs)(a.li,{children:["Launch ",(0,r.jsx)(a.code,{children:"generate.sh"})]}),"\n",(0,r.jsx)(a.li,{children:"Commit"}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"grafana-deployment-with-keycloak-oauth2-sso-configuration",children:"Grafana deployment with Keycloak OAuth2 SSO configuration"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://grafana.github.io/grafana-operator/docs/examples/grafana_keycloak_sso/readme/",children:"Please follow official guide from the Grafana-operator documentation"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"ingress",children:"Ingress"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://grafana.github.io/grafana-operator/docs/examples/ingress_https/readme/",children:"Please follow official guide from the Grafana-operator documentation"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"alerts",children:"Alerts"}),"\n",(0,r.jsxs)(a.p,{children:["Please refer the deticated ",(0,r.jsx)(a.a,{href:"./../alerts/grafana-alerts",children:"alerts"})," chapter."]})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>i});var r=n(6540);const s={},t=r.createContext(s);function o(e){const a=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:a},e.children)}}}]);